name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

permissions:
  contents: read
  security-events: write

jobs:
  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'  # Use version that matches code requirements
          cache: true
          check-latest: true

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck
        run: govulncheck ./...

  osv-scanner:
    name: OSV Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true  # Security scanners can be flaky, don't fail the whole pipeline
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'  # Use version that matches code requirements
          cache: true
          check-latest: true

      - name: Install OSV Scanner
        run: go install github.com/google/osv-scanner/cmd/osv-scanner@latest

      - name: Run OSV Scanner
        run: osv-scanner --lockfile=go.mod .

  gosec:
    name: Go Security Analysis
    runs-on: ubuntu-latest
    continue-on-error: true  # Security scanners can be flaky
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true
          check-latest: true

      - name: Install gosec
        run: |
          wget -O - -q https://raw.githubusercontent.com/securecodewarrior/gosec/master/install.sh | sh -s v2.21.4
          sudo mv ./bin/gosec /usr/local/bin/

      - name: Run gosec
        run: gosec -fmt sarif -out results.sarif ./...

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        if: always() && hashFiles('results.sarif') != ''
